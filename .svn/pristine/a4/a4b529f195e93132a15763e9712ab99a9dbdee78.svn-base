<?php
	class M_user extends CI_Model{
		private $user_table;
		private $session_table;
		
		/**
		 * 构造函数 
		 */
		function __construct(){
			parent::__construct();
			$this->user_table=$this->db->dbprefix('user');
			$this->session_table=$this->db->dbprefix('session');
		}
		
		/**
		 * 创建数据库
		 * @return unknown
		 */
		function create_table(){
			$result= $this->db->simple_query("
					CREATE TABLE {$this->user_table} (
					  `user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
					  `email` varchar(200) NOT NULL UNIQUE,
					  `password` varchar(49) DEFAULT NULL,
					  `real_name` varchar(32) NOT NULL,
					  `display_name` varchar(32) DEFAULT NULL,
					  `create_time` int(10) unsigned NOT NULL,
					  `last_activity` int(10) unsigned NOT NULL,
					  PRIMARY KEY (`user_id`)
					) ENGINE=MyISAM  DEFAULT CHARSET=utf8;"
					);
			$result2=$this->db->simple_query("
					CREATE TABLE IF NOT EXISTS  {$this->session_table} (
						session_id varchar(40) DEFAULT '0' NOT NULL,
						ip_address varchar(16) DEFAULT '0' NOT NULL,
						user_agent varchar(120) NOT NULL,
						last_activity int(10) unsigned DEFAULT 0 NOT NULL,
						user_data text DEFAULT '' NOT NULL,
						PRIMARY KEY (session_id)
					);");
			return $result;
		}
		
		/**
		 * 添加一个用户
		 * @param array $data
		 * @return boolean
		 */
		function add_user($data){
			
			$data['password'] = md5($data['password']);
			$this->db->insert($this->user_table,$data);
			return ($this->db->affected_rows() > 0) ? $this->db->insert_id() : FALSE;
		}
		
		/**
		 * 验证用户账号和密码
		 * @param string $username 账号
		 * @param string $password 密码
		 * @return Ambigous <boolean, unknown>
		 */
		function validate_user($username, $password)
		{
			$data = FALSE;
			
			$this->db->where('email', $username);
			$query = $this->db->get($this->user_table);
			
			if($query->num_rows() == 1)
	        {
	            $data = $query->row_array();
	        }
	      		
			if(!empty($data))
			{
				$data = ($data['password']===md5($password)) ? $data : FALSE;
			}
			
			$query->free_result();
			
			return $data;
		}
		
		/**
		 * 验证某个内容是否存在
		 * @param string $key
		 * @param string $value
		 * @param int $exclude_uid
		 * @return boolean
		 */
		function check_exist($key = 'username',$value = '', $exclude_uid = 0)
		{
			if(!empty($value))
			{
				
				$this->db->select('user_id')->from($this->user_table)->where($key, $value);
		
				if(!empty($exclude_uid) && is_numeric($exclude_uid))
				{
					$this->db->where('uid <>', $exclude_uid);
				}
		
				$query = $this->db->get();
				$num = $query->num_rows();
				$query->free_result();
		
				return $num;
			}
		
			return FALSE;
		}
		
		
	}