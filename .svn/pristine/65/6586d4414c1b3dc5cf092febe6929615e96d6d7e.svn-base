<?php
	class M_place extends CI_Model{
		private $place_table;
		
		private $place_category_table;
		
		private $place_member_table;
		
		/**
		 * 构造函数 
		 */
		function __construct(){
			parent::__construct();
			$this->place_table=$this->db->dbprefix('place');
			$this->place_category_table=$this->db->dbprefix('place_category');
			$this->place_member_table=$this->db->dbprefix('place_member');
			$this->create_table();
		}
		
		/**
		 * 创建数据库
		 * @return unknown
		 */
		function create_table(){
			$place= $this->db->simple_query("
					CREATE TABLE IF NOT EXISTS `{$this->place_table}` (
						`place_id` INT( 11 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
						`place_name` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL ,
						`place_destription` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL ,
						`place_category` INT( 11 ) UNSIGNED NOT NULL ,
						`place_states` INT( 11 ) UNSIGNED NOT NULL ,
						`member_count` INT( 11 ) UNSIGNED NOT NULL ,
						`wifi_mac` varchar(12) ,
						`create_time` INT( 10 ) UNSIGNED NOT NULL
						) ENGINE = MYISAM CHARACTER SET utf8 COLLATE utf8_general_ci;
					");
			$place_category=$this->db->simple_query("
					CREATE TABLE  IF NOT EXISTS `{$this->place_category_table}` (
						`place_category_id` INT( 11 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
						`place_category_name` VARCHAR( 255 ) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL ,
						`place_count` INT( 11 ) NOT NULL
						) ENGINE = MYISAM CHARACTER SET utf8 COLLATE utf8_general_ci;
					");
			$place_member=$this->db->simply_query("
					CREATE TABLE IF NOT EXISTS `{$this->place_member_table}` (
						`place_member_id` INT( 11 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
						`place_id` INT( 11 ) UNSIGNED NOT NULL ,
						`user_id` INT( 11 ) UNSIGNED NOT NULL ,
						`is_admin` TINYINT( 1 ) UNSIGNED NOT NULL ,
						`is_confirmed` TINYINT( 1 ) UNSIGNED NOT NULL
						) ENGINE = INNODB CHARACTER SET utf8 COLLATE utf8_general_ci;
					");
			return TRUE;
		}
		
		/**
		 * 创建场所
		 * @param unknown_type $data
		 * @return boolean
		 */
		function add_place($data){
			$this->db->insert($this->place_table,$data);
			return ($this->db->affected_rows() > 0) ? $this->db->insert_id() : FALSE;
		}
		
		/**
		 * 创建场所分类
		 * @param unknown_type $data
		 * @return unknown
		 */
		function add_place_category($data){
			$place_category_id=$this->get_place_category_id_by_name($data['place_category_name']);
			if($place_category_id){
				$this->db->set('place_count',"place_count+1",FALSE);
				$this->db->where(array('place_category_id'=>$place_category_id));
				$this->db->update($this->place_category_table);
				return $place_category_id;
			}else{
				$this->db->insert($this->place_category_table,$data);
				return $this->db->insert_id();
			}
		}
		
		/**
		 * 增加场所内用户
		 * @param unknown_type $data
		 * @return boolean
		 */
		function add_place_member($data){
			$this->db->insert($this->place_member_table,$data);
			return ($this->db->affected_rows() > 0) ? $this->db->insert_id() : FALSE;
		}
		
		/**
		 * 根据场所名称获取场所分类ID
		 * @param unknown_type $place_category_name
		 */
		function get_place_category_id_by_name($place_category_name){
			$this->db->select('place_category_id');
			$this->db->from($this->place_category_table);
			$this->db->where('place_category_name',$place_category_name);
			$query = $this->db->get();
			$num = $query->row();
			$query->free_result();
			return $num->place_category_id;
		}
		
		/**
		 * 增加地点内用户数
		 * @param unknown_type $place_id
		 */
		function increase_place_member_count($place_id){
			$this->db->set('member_count',"member_count+1",FALSE);
			$this->db->where(array('place_id'=>$place_id));
			$this->db->update($this->place_table);
		}
	}